name: button deploy to NCP (Node.js)
run-name: Running
on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: dev_crawl

      - name: Debug directory structure
        run: ls -R  # 디렉토리 구조 확인용

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: crawl/package-lock.json  # crwal -> crawl 수정

      - name: Install dependencies
        run: npm install
        working-directory: crawl  # crwal -> crawl 수정


      - name: Create .env file
        run: |
          echo "MONGODB_ADMIN_URI=${{ secrets.MONGO_DB_ADMIN_URI }}" >> .env
          echo "MONGO_DB_NAME=${{ secrets.MONGO_DB_NAME }}" >> .env
        working-directory: crawl  # crwal -> crawl 수정
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Docker build and push
        run: |
          docker build --build-arg MONGODB_ADMIN_URI=${{ secrets.MONGO_DB_ADMIN_URI }} --build-arg MONGO_DB_NAME=${{ secrets.MONGO_DB_NAME }} -t ${{ secrets.DOCKER_REPO }}/cv_search .
          docker push ${{ secrets.DOCKER_REPO }}/cv_search
        working-directory: crawl  # crwal -> crawl 수정

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to NCP
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.NCP_HOST }}
          username: ${{ secrets.NCP_USERNAME }}
          password: ${{ secrets.NCP_PASSWORD }}
          port: ${{ secrets.NCP_PORT }}
          script: |
            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            sudo docker stop $(sudo docker ps -a -q)
            sudo docker rm -f $(sudo docker ps -a -q)
            sudo docker pull ${{ secrets.DOCKER_REPO }}/cv_search
            sudo docker run -d -p 3000:3000 --env-file .env ${{ secrets.DOCKER_REPO }}/cv_search
            sudo docker image prune -f
